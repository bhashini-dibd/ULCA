openapi: 3.0.0
info:
  title: Pipeline Compute Schema
  description: The document defines request and response schema for compute call to pipeline endpoint.
  contact:
    name: ekstep foundation
    email: contact@ekstep.org
  version: 1.0.1
servers:
  - url: /ulca
paths: {}
components:
  schemas:
  
    PipelineComputeRequest:
      required:
        - pipelineTasks
        - inputData
      type: object
      properties:
        pipelineTasks:
          $ref: "#/components/schemas/PipelineRequestList"
        inputData:
          $ref: "#/components/schemas/PipelineInput"
        controlConfig:
          $ref: "#/components/schemas/ControlConfig"

    PipelineComputeResponse:
      required:
        - pipelineResponse
        - controlConfig
      type: object
      properties:
        pipelineResponse:
          $ref: "#/components/schemas/ResponseList"
        controlConfig:
          $ref: "#/components/schemas/ControlConfig"

    TaskRequestConfig:
      anyOf:
        - $ref: "#/components/schemas/TranslationRequestConfig"
        - $ref: "#/components/schemas/TransliterationRequestConfig"
        - $ref: "#/components/schemas/ASRRequestConfig"
        - $ref: "#/components/schemas/TTSRequestConfig"

    PipelineInput:
      oneOf:
        - $ref: "#/components/schemas/TranslationRequestInput"
        - $ref: "#/components/schemas/TransliterationRequestInput"
        - $ref: "#/components/schemas/ASRRequestInput"
        - $ref: "#/components/schemas/TTSRequestInput"

    PipelineRequestList:
      type: array
      items:
        $ref: "#/components/schemas/TaskRequestConfig"

    # PipelineInputList:
    #   type: array
    #   items:
    #     $ref: "#/components/schemas/PipelineInput"


    TranslationRequestInput:
      required:
        - input
      type: object
      properties:
        input:
          $ref: "#/components/schemas/Sentences"
    
    NerRequestInput:
      required:
        - input
      type: object
      properties:
        input:
          $ref: "#/components/schemas/Sentences"
    TxtLangDetectionRequestInput:
      required:
        - input
      type: object
      properties:
        input:
          $ref: "#/components/schemas/Sentences"
    OCRRequestInput:
      required:
        - image
      type: object
      properties:
        image:
          $ref: '#/components/schemas/ImageFiles'
          
    TransliterationRequestInput:
      required:
        - input
      type: object
      properties:
        input:
          $ref: "#/components/schemas/Sentences"
          
    TranslationRequestConfig:
      required:
        - config
        - taskType
      type: object
      properties:
        taskType:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/SupportedTasks
        config:
          $ref: "#/components/schemas/TranslationConfig"
          
    TransliterationRequestConfig:
      required:
        - config
        - taskType
      type: object
      properties:
        taskType:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/SupportedTasks
        config:
          $ref: "#/components/schemas/TransliterationConfig"

    ASRRequestConfig:
      required:
        - config
        - taskType
      type: object
      properties:
        taskType:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/SupportedTasks
        config:
          $ref: "#/components/schemas/AudioConfig"

    ASRRequestInput:
      required:
        - audio
      type: object
      properties:
        audio:
          $ref: "#/components/schemas/AudioFiles"

    TTSRequestInput:
      required:
        - input
      type: object
      properties:
        input:
          $ref: "#/components/schemas/Sentences"

    TTSRequestConfig:
      required:
        - config
        - taskType
      type: object
      properties:
        taskType:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/SupportedTasks
        config:
          $ref: "#/components/schemas/TTSConfig"

    
    AudioOutput:
      type: array
      description: list of
      items: 
        $ref: '#/components/schemas/AudioTranscription'
    AudioTranscription:
      required:
        - source
      type: object
      properties:
        source:
          minLength: 1
          type: string
          description: input sentence for the model
        nBestTokens:
          type: array
          description: list of
          items:
            $ref: '#/components/schemas/TokenProbability'
    
    TokenProbability:
      type: array
      description: list of
      items:
            $ref: '#/components/schemas/SubtokenProbability'
    
    SubtokenProbability:
      required:
        - token
        - score
      type: object
      properties:
        token:
          type: string
          description : specific character
        score:
          type: number
          minimum: 0
          maximum: 1
          description: probability score for the specific character
    
    Sentences:
      type: array
      description: list of
      items:
        $ref: "#/components/schemas/Sentence"

    Sentence:
      required:
        - source
      type: object
      properties:
        source:
          minLength: 1
          type: string
          description: input sentence for the model
        target:
          minLength: 1
          type: string
          description: to be used along with translation model. expected translated sentence, for reference

    TranslationConfig:
      required:
        - language
        - serviceId
      type: object
      properties:
        serviceId:
          type: integer
          description: Unique identifier of service
          example: 103
        language:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/LanguagePair
        inputFormat:
          $ref: "#/components/schemas/SupportedFormats"
        outputFormat:
          $ref: "#/components/schemas/SupportedFormats"
          
    TransliterationConfig:
      required:
        - language
        - serviceId
      type: object
      properties:
        serviceId:
          type: integer
          description: Unique identifier of service
          example: 103
        language:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/LanguagePair
        inputFormat:
          $ref: "#/components/schemas/SupportedFormats"
        outputFormat:
          $ref: "#/components/schemas/SupportedFormats"
    
    TTSConfig:
      required:
        - language
        - serviceId
      type: object
      properties:
        serviceId:
          type: string
          description: Unique identifier of service
          example: 103
        language:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/LanguagePair
        gender:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/Gender
        samplingRate:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/AudioSampleRate
        inputFormat:
          $ref: "#/components/schemas/SupportedFormats"
        outputFormat:
          $ref: "#/components/schemas/SupportedFormats"

    AudioConfig:
      required:
        - language
        - serviceId
      type: object
      properties:
        serviceId:
          type: string
          description: Unique identifier of service
          example: 103
        language:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/LanguagePair
        audioFormat:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/AudioFormat
        channel:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/AudioChannel
        samplingRate:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/AudioSampleRate
        bitsPerSample:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/AudioBitsPerSample
        transcriptionFormat:
          type: object
          properties:
            value:
              $ref: '#/components/schemas/TextFormat'
        speechContext:
          type: array
          description: list of
          items:
            $ref: '#/components/schemas/SpeechContext'
        postProcessors:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/AudioPostProcessors
        domain:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/Domain
        detailed:
          type: boolean
          description: to specify whether details are required in output like SNR, sampling rate
        bestTokenCount : 
          type: integer
          description: Displays the token level probabilities of the final prediction. 5 would be the suggested optimal value. Each successive token will have exponentially lower probability
        punctuation:
          type: boolean
          example: true
        model:
          type: string
          enum:
            - command_and_search
            - phone_call
            - video
            - default
        encoding:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/Encoding

    
    SpeechContext:
      type: object
      properties:
        phrases:
          type: array
          description: list of
          example:
            - weather
            - rain
          items:
            type: string
            description: phrases to perform hotword boosting
        boost:
          type: number
          description: numeric to specify phrase boosting threshold
    
    TextFormat:
      type: string
      description: supported textual formats
      enum:
        - srt
        - transcript
        - webvtt
        - alternatives

    AudioFormat:
      type: string
      description: audio format of the audio file
      example: flac
      enum:
        - wav
        - pcm
        - mp3
        - flac
        - sph
        - webm
        - m4a
        - webm
    SupportedFormats:
      anyOf:
        - $ref: "#/components/schemas/AudioFormat"
        - $ref: "#/components/schemas/TextFormat"
        - $ref: "#/components/schemas/TextFormat"    

    AudioFiles:
      type: array
      description: list of
      items:
        $ref: "#/components/schemas/AudioFile"
    AudioFile:
      required:
        - audioContent | audioUri
      type: object
      properties:
        audioContent:
          type: string
          description: audio content with audio duration <= 1min
          format: byte
        audioUri:
          type: string
          description: path on gcp/s3 bucket or https url
          example: gs://bucket/audio.wav

    TranscriptionFormat:
      type: object
      properties:
        value:
          type: string
          description: format of ASR output
          enum:
            - srt
            - transcript
            - alternatives
            
    ImageFiles:
      type: array
      description: list of
      items:
        $ref: '#/components/schemas/ImageFile'
    ImageFile:
      required:
        - imageContent | imageUri
      type: object
      properties:
        imageContent:
          type: string
          description: image content
          format: byte
        imageUri:
          type: string
          description: path on gcp/s3 bucket or https url
          example: gs://bucket/testimg.jpeg

    Responses:
      anyOf:
        - $ref: "#/components/schemas/TranslationResponse"
        - $ref: "#/components/schemas/TransliterationResponse"
        - $ref: "#/components/schemas/ASRResponse"
        - $ref: "#/components/schemas/TTSResponse"
    ResponseList:
      type: array
      items:
        $ref: "#/components/schemas/Responses"

    TranslationResponse:
      description: the response for translation.  Standard http status codes to be used.
      required:
        - output
        - taskType
      type: object
      properties:
        taskType:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/SupportedTasks
        output:
          $ref: "#/components/schemas/Sentences"
        config:
          $ref: "#/components/schemas/TranslationConfig"
    
    TransliterationResponse:
      description: the response for transliteration.  Standard http status codes to be used.
      required:
        - output
        - taskType
      type: object
      properties:
        taskType:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/SupportedTasks
        output:
          $ref: "#/components/schemas/Sentences"
        config:
          $ref: "#/components/schemas/TransliterationConfig"

    ASRResponse:
      description: the response for translation.  Standard http status codes to be used.
      required:
        - output
        - taskType
      type: object
      properties:
        taskType:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/SupportedTasks
        output:
          $ref: '#/components/schemas/AudioOutput'
        config:
          $ref: '#/components/schemas/TranslationConfig'

    TTSResponse:
      description: the response for translation.  Standard http status codes to be used.
      required:
        - audio
        - taskType
      type: object
      properties:
        taskType:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/SupportedTasks
        audio:
          $ref: "#/components/schemas/AudioFiles"
        config:
          $ref: "#/components/schemas/AudioConfig"
          
    ControlConfig:
      description: generic settings related to pipeline
      # required:
      #   - dataTracking
      type: object
      properties:
        dataTracking:
          type: boolean
          default: true
          description: variable specifies whether data used for inferencing will be logged and visible to model provider for future reference
  securitySchemes:
    authToken:
      type: apiKey
      description: token issued by authenticating the user
      name: auth-token
      in: header
