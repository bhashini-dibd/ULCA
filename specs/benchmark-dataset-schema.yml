openapi: 3.0.0
info:
  title: ULCA - Benchmark Dataset Schema
  description: Benchmark Dataset and it supporting schema
  contact:
    name: ekstep foundation
    email: contact@ekstep.org
  version: 0.4.0
servers:
  - url: /ulca
paths: {}
components:
  schemas:
    DatasetDirectory:
      type: object
      required:
        - data
        - params
      description: The object defines the physical structure of the uploaded benchmark dataset file. The benchmark dataset and its respective parameters has to be present in an individual directory/folder. The dataset data should have name 'data.json', similarly the associated parameters should have name 'params.json'. Dataset data file should adhere to 'dataSchema' described in the properties, similarly the parameter of the dataset should adhere to 'paramSchema'. Non compliant will result in rejection of the submission.
      properties:
        data:
          $ref: '#/components/schemas/DatasetFile'
        dataSchema:
          $ref: '#/components/schemas/DatasetDataRowSchema'
        params:
          $ref: '#/components/schemas/DatasetFile'
        paramSchema:
          $ref: '#/components/schemas/DatasetParamsSchema'
    DatasetDirectories:
      type: object
      description: The object represents a compressed file that can contains multiple 'DatasetDirectory' object.
      properties:
        datasetFiles:
          type: array
          items:
            $ref: '#/components/schemas/DatasetDirectory'
    DatasetParamsSchema:
      type: object
      description: the dataset params.json file should follow this schema
      properties:
        params:
          type: object
          oneOf:
            - $ref: '#/components/schemas/TranslationBenchmarkDatasetParamsSchema'
            - $ref: '#/components/schemas/TransliterationBenchmarkDatasetParamsSchema'
            - $ref: '#/components/schemas/AsrBenchmarkDatasetParamsSchema'
            - $ref: '#/components/schemas/OcrBenchmarkDatasetParamsSchema'
            - $ref: '#/components/schemas/TxtLangDetectionBenchmarkDatasetParamsSchema'
            - $ref: '#/components/schemas/NerBenchmarkDatasetParamsSchema'
            - $ref: '#/components/schemas/AudioLangDetectionBenchmarkDatasetParamsSchema'
    DatasetDataRowSchema:
      type: object
      description: the benchmark dataset data.json file should follow this schema
      properties:
        data:
          type: object
          oneOf:
            - $ref: '#/components/schemas/TranslationBenchmarkDatasetRowSchema'
            - $ref: '#/components/schemas/TransliterationBenchmarkDatasetRowSchema'
            - $ref: '#/components/schemas/AsrBenchmarkDatasetRowSchema'
            - $ref: '#/components/schemas/OcrBenchmarkDatasetRowSchema'
            - $ref: '#/components/schemas/TxtLangDetectionBenchmarkDatasetRowSchema'
            - $ref: '#/components/schemas/NerBenchmarkDatasetRowSchema'
            - $ref: '#/components/schemas/AudioLangDetectionBenchmarkDatasetRowSchema'
    BenchmarkDatasetCommonParamsSchema:
      type: object
      description: common parameters or attributes of dataset that is primarily same across the supported dataset.
      required:
        - name
        - taskType
        - description
        - languages
        - domain
        - license
        - submitter
      properties:
        version:
          type: string
          default: 1
          description: params schema version
        name:
          type: string
          description: user defined name for the benchmark dataset
        taskType:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/ModelTask
        description:
          type: string
          description: description of the benchmark dataset type
        languages:
          nullable: true
          allOf:
            - $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/LanguagePair
        collectionSource:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/Source
        domain:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/Domain
        license:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/License
        licenseUrl:
          type: string
          description: url of the custom license
        submitter:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/Submitter
    TranslationBenchmarkDatasetParamsSchema:
      allOf:
        - $ref: '#/components/schemas/BenchmarkDatasetCommonParamsSchema'
        - type: object
    TranslationBenchmarkDatasetRowSchema:
      required:
        - sourceText
        - targetText
      properties:
        sourceText:
          type: string
          description: textual data in source language
        targetText:
          type: string
          description: textual data in target language
      type: object
      description: the schema of data file uploaded should adhere to this specified structure.
    TransliterationBenchmarkDatasetParamsSchema:
      allOf:
        - $ref: '#/components/schemas/BenchmarkDatasetCommonParamsSchema'
        - type: object
    TransliterationBenchmarkDatasetRowSchema:
      required:
        - sourceText
        - targetText
      properties:
        sourceText:
          type: string
          description: textual data in source language
        targetText:
          type: string
          description: textual data in target language
      type: object
      description: the schema of data file uploaded should adhere to this specified structure.
    TxtLangDetectionBenchmarkDatasetParamsSchema:
      allOf:
        - $ref: '#/components/schemas/BenchmarkDatasetCommonParamsSchema'
        - type: object
    TxtLangDetectionBenchmarkDatasetRowSchema:
      required:
        - sourceText
        - langCode
      properties:
        sourceText:
          type: string
          description: textual data in source language
        langCode:
          type: string
          description: Indic language code, iso-639-1, iso 639-2
      type: object
      description: the schema of data file uploaded should adhere to this specified structure.
    AudioLangDetectionBenchmarkDatasetParamsSchema:
      allOf:
        - $ref: '#/components/schemas/AsrBenchmarkDatasetParamsSchema'
        - type: object
    AudioLangDetectionBenchmarkDatasetRowSchema:
      required:
        - audioFilename
        - langCode
      type: object
      description: the schema defines the column name present in physical file that is being pointed by dataFilename key.
      properties:
        audioFilename:
          type: string
          description: filename of the audio file
        langCode:
          type: string
          description: Indic language code, iso-639-1, iso 639-2
        speaker:
          type: string
          description: speaker name or id for the audio utterance
        duration:
          type: number
          description: audio duration in seconds
        collectionSource:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/Source
        channel:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/AudioChannel
        samplingRate:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/AudioSampleRate
        bitsPerSample:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/AudioBitsPerSample
    NerBenchmarkDatasetParamsSchema:
      required:
        - tagsFormat
      allOf:
        - $ref: '#/components/schemas/BenchmarkDatasetCommonParamsSchema'
        - type: object
      type: object
      properties:
        tagsFormat:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/SupportedTagsFormat
    NerBenchmarkDatasetRowSchema:
      allOf:
        - $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/dataset-schema.yml#/components/schemas/NerDatasetRowSchema
        - type: object
    AsrBenchmarkDatasetParamsSchema:
      allOf:
        - $ref: '#/components/schemas/BenchmarkDatasetCommonParamsSchema'
        - type: object
      type: object
      properties:
        format:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/AudioFormat
        channel:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/AudioChannel
        samplingRate:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/AudioSampleRate
        bitsPerSample:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/AudioBitsPerSample
    AsrBenchmarkDatasetRowSchema:
      required:
        - audioFilename
        - text
      type: object
      description: the schema defines the column name present in physical file that is being pointed by dataFilename key.
      properties:
        audioFilename:
          type: string
          description: filename of the audio file
        text:
          type: string
          description: textual output of the audio
        speaker:
          type: string
          description: speaker name or id for the audio utterance
        duration:
          type: number
          description: audio duration in seconds
        collectionSource:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/Source
        channel:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/AudioChannel
        samplingRate:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/AudioSampleRate
        bitsPerSample:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/AudioBitsPerSample
    OcrBenchmarkDatasetParamsSchema:
      allOf:
        - $ref: '#/components/schemas/BenchmarkDatasetCommonParamsSchema'
        - type: object
      type: object
      properties:
        format:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/ImageFormat
        dpi:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/ImageDPI
        imageTextType:
          $ref: https://raw.githubusercontent.com/bhashini-dibd/ulca/master/specs/common-schemas.yml#/components/schemas/ImageTextType
    OcrBenchmarkDatasetRowSchema:
      required:
        - imageFilename
        - groundTruth
      type: object
      description: the schema defines the column name present in physical file that is being pointed by dataFilename key.
      properties:
        imageFilename:
          type: string
          description: filename of the image file
        groundTruth:
          type: string
          description: text data present in boundingbox
        boundingBox:
          $ref: '#/components/schemas/BoundingBox'
    DatasetFile:
      type: object
      description: represent the physical file attributes
      required:
        - filename
        - fileType
      properties:
        filename:
          type: string
          description: name of the file
          enum:
            - data
            - params
        fileType:
          type: string
          description: file format
          enum:
            - json
            - csv
    Dataset:
      required:
        - description
        - datasetFileId
      type: object
      description: describes the dataset schema
      properties:
        datasetId:
          type: string
          description: unique identification of the dataset. This will be auto-generated value once the submitted dataset is validated by the system
          format: uuid4
        count:
          minimum: 100
          type: number
          description: actual number of unique records present under a dataset. The count can/will vary from the original submitted dataset because of validation stage.
        description:
          maxLength: 200
          minLength: 50
          type: string
          description: describes the purpose and usage of the dataset so that other user can get benefit out of it.
          example: contribution from team Anuvaad for government press release domain
        datasetFileId:
          $ref: '#/components/schemas/DatasetFileIdentifier'
        submittedOn:
          type: string
          description: timestamp when dataset is uploaded
          format: datetime
        validatedOn:
          type: string
          description: timestamp when dataset is validated
          format: datetime
        publishedOn:
          type: string
          description: timestamp when dataset got listed
          format: datetime
    DatasetFileIdentifier:
      type: object
      required:
        - fileId
        - datasetFormatType
      description: the identifier object retuned when compressed dataset file is uploaded. https://raw.githubusercontent.com/tus/tus-resumable-upload-protocol/master/OpenAPI/openapi3.yaml
      properties:
        fileId:
          type: string
          format: uuidv4
          description: upload identifier returned by the file upload service
        datasetFormatType:
          type: string
          enum:
            - json
            - csv
        timestamp:
          type: string
          format: datetime
          description: upload completed timestamp
        format:
          type: string
          description: supported file compression format
          enum:
            - tar_gz
            - zip
    BoundingBox:
      type: object
      properties:
        vertices:
          minLength: 4
          type: array
          items:
            $ref: '#/components/schemas/Vertex'
      description: array of vertex with clockwise coordinate arrangement
    Vertex:
      type: object
      properties:
        x:
          type: number
          description: x-coordinate
        'y':
          type: number
          description: y-coordinate
