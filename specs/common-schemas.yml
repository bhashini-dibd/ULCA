openapi: 3.0.0
info:
  title: Unified Language Contribution API (ULCA) documentation
  description: The document defines the common schema object used across all available APIs
  contact:
    name: ekstep foundation
    email: contact@ekstep.org
  version: 0.7.1
servers:
  - url: /
paths: {}
components:
  schemas:
    LanguagePair:
      required:
        - sourceLanguage
      type: object
      properties:
        sourceLanguageName:
          type: string
          description: human name associated with the language code
        sourceLanguage:
          type: string
          description: Indic language code, iso-639-1, iso 639-2
          $ref: '#/components/schemas/SupportedLanguages'
        sourceScriptCode:
          type: string
          description: ISO 15924, Codes for the representation of names of scripts
          $ref: '#/components/schemas/SupportedScripts'
        targetLanguageName:
          type: string
          description: human name associated with the language code
        targetLanguage:
          $ref: '#/components/schemas/SupportedLanguages'
        targetScriptCode:
          type: string
          description: ISO 15924, Codes for the representation of names of scripts
          $ref: '#/components/schemas/SupportedScripts'
      description: language pair, make targetLanguage null to reuse the object to indicate single language
    LanguagePairs:
      type: array
      items:
        $ref: '#/components/schemas/LanguagePair'
    Domain:
      type: array
      description: This attribute defines that `relevant business area`
      example:
        - news
        - legal
      items:
        type: string
        enum:
          - general
          - news
          - education
          - legal
          - government-press-release
          - healthcare
          - agriculture
          - automobile
          - tourism
          - financial
          - movies
          - subtitles
          - sports
          - technology
          - lifestyle
          - entertainment
          - parliamentary
          - art-and-culture
          - economy
          - history
          - philosophy
          - religion
          - national-security-and-defence
          - literature
          - geography
    License:
      type: string
      description: license under which information is published.
      example: cc-by-4.0
      enum:
        - cc-by-4.0
        - cc-by-sa-4.0
        - cc-by-nd-2.0
        - cc-by-nd-4.0
        - cc-by-nc-3.0
        - cc-by-nc-4.0
        - cc-by-nc-sa-4.0
        - cc0
        - mit
        - gpl-3.0
        - bsd-3-clause
        - private-commercial
        - unknown-license
        - custom-license
    Contributor:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 50
          minLength: 5
          type: string
          description: human name of the contributor
        oauthId:
          $ref: '#/components/schemas/OAuthIdentity'
        aboutMe:
          type: string
          description: describing the contributor
    Contributors:
      type: array
      items:
        $ref: '#/components/schemas/Contributor'
    Submitter:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 50
          minLength: 3
          type: string
          description: Name of the Submitter
        oauthId:
          $ref: '#/components/schemas/OAuthIdentity'
        aboutMe:
          type: string
          description: Describing the Submitter
        team:
          $ref: '#/components/schemas/Contributors'
      description: the schema of data file uploaded should adhere to this specified structure.
    DatasetType:
      type: string
      description: supported dataset type under language initiatives
      enum:
        - parallel-corpus
        - monolingual-corpus
        - transliteration-corpus
        - asr-corpus
        - tts-corpus
        - asr-unlabeled-corpus
        - ocr-corpus
        - document-layout-corpus
        - glossary-corpus
        - ner-corpus
    OAuthIdentity:
      type: object
      properties:
        identifier:
          type: string
          description: system identification for the contributor
          format: uuidv4
        oauthId:
          type: string
          description: popular social network identifier, typically identifier returned after auth
        provider:
          type: string
          description: user authentication provider
          enum:
            - custom
            - github
            - facebook
            - instagram
            - google
            - yahoo
    Source:
      type: array
      description: various sources, url from where the information is collected.
      example:
        - https://main.sci.gov.in
      items:
        maxItems: 10
        minItems: 1
        type: string
    CollectionMethod:
      type: array
      description: various collection methods user have used to create the dataset
      example:
        - web-scrapping-machine-readable
        - algorithm-auto-aligned
      items:
        maxItems: 10
        minItems: 1
        type: string
        enum:
          - web-scrapping-machine-readable
          - web-scrapping-ocr
          - manual-human-translated
          - manual-transliterated
          - algorithm-auto-aligned
          - algorithm-back-translated
          - human-validated
          - phone-recording
          - crowd-sourced
    DataPoint:
      required:
        - label
        - value
      type: object
      properties:
        label:
          type: string
          description: string value to show
        value:
          type: number
          description: numeric value of the data point
        internalLabel:
          type: string
          description: internal representation of the label
    ImageFormat:
      type: string
      description: image file format description
      example: png
      enum:
        - jpeg
        - bmp
        - png
        - tiff
    ImageTextType:
      type: string
      description: type of image on which text area is annotated.
      example: scene-text
      enum:
        - scene-text
        - typewriter-typed-text
        - computer-typed-text
        - handwritten-text
    ImageDPI:
      type: string
      description: dpi of the image file
      example: 300_dpi
      enum:
        - 300_dpi
        - 72_dpi
    AudioFormat:
      type: string
      description: audio format of the audio file
      example: flac
      enum:
        - wav
        - pcm
        - mp3
        - flac
        - sph
        - webm
        - m4a
        - webm
    AudioChannel:
      type: string
      description: number of channel in the audio
      example: stereo
      enum:
        - mono
        - stereo
    AudioSampleRate:
      type: number
      description: sample rate of the audio file in kHz
      example: 44
    AudioBitsPerSample:
      type: string
      description: number of bits per sample
      example: sixteen
      enum:
        - sixteen
        - eight
    AudioPostProcessors:
      type: array
      description: This attribute defines the `post processing steps of audio recognition model`
      example:
        - itn
        - punctuation
      items:
        type: string
        enum:
          - itn
          - punctuation
          - numbers-only
          - profainity-filter
    NumberOfSpeakers:
      minimum: 1
      type: number
      description: number of speakers in the recorded audio file
      example: 3
    Gender:
      type: string
      description: gender description
      enum:
        - male
        - female
        - transgender
        - non-specified
        - others
    Encoding:
      type: string
      description: encoding used for representing the input/output binary data
      enum:
        - base64
        - base85
        - base36
        - base32
        - ascii
        - ascii85
    Speed:
      type: number
      description: optional field to specify the speed of audio
      default: 1
    Duration:
      type: number
      description: optional field to specify the duration of audio in milliseconds
      example: 300
    ProcessStage:
      type: string
      description: various life-cycle stage of model when benchmarking
      enum:
        - submitted
        - benchmarked
        - published
    Timeline:
      required:
        - message
        - stage
        - status
        - timestamp
      type: object
      properties:
        stage:
          $ref: '#/components/schemas/ProcessStage'
        message:
          type: string
          description: human readable message attached for each stage change
        timestamp:
          type: string
          description: timestamp of stage changes
          format: datetime
        status:
          type: string
          description: status of each stage
          enum:
            - in-progress
            - status-with-errors
            - success
            - failed
      description: stage life-cycle of model before it gets published
    SearchParams:
      type: object
      properties:
        key:
          type: string
          enum:
            - languages
            - domain
            - collectionMethod
            - collectionSource
        params:
          type: object
          oneOf:
            - $ref: '#/components/schemas/Domain'
            - $ref: '#/components/schemas/LanguagePair'
            - $ref: '#/components/schemas/Source'
            - $ref: '#/components/schemas/CollectionMethod'
    ModelTask:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/SupportedTasks'
      description: the category of model under which it has been released or trained
    ModelProcessingType:
      type: object
      properties:
        type:
          type: string
          enum:
            - batch
            - streaming
      description: the type of inference for the given model
    SupportedLanguages:
      type: string
      description: This attribute defines the  language codes(iso-639-1, iso 639-2) supported under ULCA
      enum:
        - en
        - hi
        - mr
        - ta
        - te
        - kn
        - gu
        - pa
        - bn
        - ml
        - as
        - brx
        - doi
        - ks
        - kok
        - mai
        - mni
        - ne
        - or
        - sd
        - si
        - ur
        - sat
        - lus
        - njz
        - pnr
        - kha
        - grt
        - sa
        - raj
        - bho
        - gom
        - awa
        - hne
        - mag
        - mwr
        - sjp
        - gbm
        - tcy
        - hlb
        - bih
        - anp
        - bns
        - bra
        - gon
        - hoc
        - xnr
        - mixed
        - unknown
    SupportedScripts:
      type: string
      description: This attribute defines the  Script codes(ISO 15924) supported under ULCA, code reference available at - `https://unicode.org/iso15924/iso15924-codes.html'
      enum:
        - Beng
        - Deva
        - Thaa
        - Gujr
        - Aran
        - Orya
        - Guru
        - Arab
        - Sinh
        - Knda
        - Mlym
        - Taml
        - Telu
        - Mtei
        - Olck
        - Latn
        - Wara
    SupportedTasks:
      type: string
      enum:
        - translation
        - transliteration
        - tts
        - asr
        - document-layout
        - ocr
        - glossary
        - ner
        - txt-lang-detection
        - audio-lang-detection
      description: the category of model under which it has been released or trained
    SupportedTagsFormat:
      type: string
      enum:
        - IOB
        - IOB2
        - BIOES
        - basic
        - custom
      description: Accepted standards for tags.
    MixedDataSource:
      type: string
      description: This attribute defines the  datasources with mixed languages in it.
      enum:
        - vaani
